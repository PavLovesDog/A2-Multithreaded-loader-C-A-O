Steps to take! HOW DO WE SOLVE THIS PROBLEM USING THREADS?

------------------------------------------------------------------------------------------------
1. Enhance the code to load the multiple images that the user chooses in parallel.
------------------------------------------------------------------------------------------------
	0. create necessary vectors
	1. create function that performs the operation of pushing file paths to string vector 
	2. within LoadFromFile case, create a for loop to run through the total files selected
	3. push back a new thread each loop.
	4. on each thread,
		- lock with mutex
		- load the image, by adding to a vector
		- unlock mutex
	6. join all threads then clear for more threads to be created

threadpool approach (Unfinished & Unrealized):

	1. 1. look at the fuction "chooseimagefilestoload" and begin understanding its operations
	 	- locate exactly where the files gets loaded or pushed
	
	2. as the files are loaded, assign them to tasks to enter the threadpool
	3. execute task (load images in parallel). 


------------------------------------------------------------------------------------------------
2. Enhance the code to load the multiple sounds the user has chosen in parallel.
------------------------------------------------------------------------------------------------
	1. check Q1...


------------------------------------------------------------------------------------------------
3. Once the multiple images have been loaded, they should be displayed in the window.
------------------------------------------------------------------------------------------------
	1. create new function to be called on thread which display images
		- image position must be taken into account, using size of window
		- if first position is taken, place it on the next etc.
		- perhaps create vector with positions and increment with each pic added..

------------------------------------------------------------------------------------------------
4. Once the multiple sounds have been loaded, the application should play the loaded sounds in
parallel.
------------------------------------------------------------------------------------------------
	2. create a new function to be called on thread to play sound
		-

------------------------------------------------------------------------------------------------
5. Use the ThreadPool class from Assessment 1 to work with a fixed number of threads to load
the images/sounds in parallel rather than creating a new thread for each chosen file.
------------------------------------------------------------------------------------------------
	1. this is unknown.


------------------------------------------------------------------------------------------------
6. The application should allow the user to configure the number of threads in the thread pool
at run time and then display the time it takes to load and display/play the chosen files.
------------------------------------------------------------------------------------------------



================================================================================================
TO DO TODAY - /10/21
================================================================================================

